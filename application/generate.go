package application

import (
	"fmt"
	"time"
)

var Licenses = make(map[string]License)

type License struct {
	Name string
	PossibleMatches []string
	Text  string
	Header string
}

func initMit() {
	Licenses["mit"] = License{
		Name: "MIT License",
		PossibleMatches: []string{"mit"},
		Header: `
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.`,
		Text: `# The MIT License (MIT)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.`,
	}
}

type PackageManager struct {
	ManagerName string
}

type Framework struct {
	FrameworkName string
}

type Language struct {
	Name string
	Version string
	Runtimer string
	GitHubCiBuilder string
	GitLabCiBuilder string
	Extension []string	
	PackageManager
	Framework
}

type Stages struct {
	DefinedBy []string
}

type Generate struct {
	Language
	Stages
	Tool string
	Copyright string
	Legal License
	Commands map[string][]string
	InitAt string
	FinishAt string
}

func (generator *Generate) InitProcess() {
	initLicences()
	generator.Language = Language{}
	generator.Stages = Stages{}
	generator.FinishAt = ""

	generator.Tool = fmt.Sprint("Generated by Saruê ", "https://github.com/nogsantos/sarue")
	generator.Copyright = fmt.Sprint("Copyright © ", time.Now().Year(), " Fabricio Nogueira <nogsantos@gmail.com>.")
	generator.Legal = Licenses["mit"]
	generator.InitAt = time.Now().Format(time.RubyDate)

	// Its required initilize the commands map
	generator.Commands = make(map[string][]string)
}

func initLicences() {
	initMit()
}

func (generator *Generate) Create() {
	generator.FinishAt = time.Now().Format(time.RubyDate)
	// fmt.Println(*generator)
}
